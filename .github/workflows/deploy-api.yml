name: Deploy API to EC2

on:
  workflow_dispatch:

jobs:
  Deploy-EC2:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout to Repo
      uses: actions/checkout@v2

    - name: Use Node.js 20.x to Build
      uses: actions/setup-node@v2
      with:
        node-version: 20.x

    - name: Install Dependencies
      run: npm install
      working-directory: ./SpaceShare.API

    - name: Build Nest API
      run: npm run build
      working-directory: ./SpaceShare.API

    - name: Verify Build Directory
      run: ls -al ./SpaceShare.API/dist

    - name: Create Deployment Package
      run: tar -czf deploy-package.tar.gz -C ./SpaceShare.API dist node_modules

    - name: Add SSH Key (main)
      if: github.ref == 'refs/heads/main'
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.AWS_DEPLOY_KEY }}" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key

    - name: Add SSH Key (uat)
      if: github.ref == 'refs/heads/uat'
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.AWS_UAT_DEPLOY_KEY }}" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key

    - name: Add SSH Key (dev)
      if: github.ref == 'refs/heads/development'
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.AWS_DEV_DEPLOY_KEY }}" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key

    - name: Transfer Deployment Package to EC2 Instance (main)
      if: github.ref == 'refs/heads/main'
      run: |
        scp -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no -P ${{ secrets.AWS_DEPLOY_PORT }} deploy-package.tar.gz ${{ secrets.AWS_DEPLOY_USER }}@${{ secrets.AWS_DEPLOY_HOST }}:${{ secrets.AWS_DEPLOY_TARGET }}/api

    - name: Transfer Deployment Package to EC2 Instance (uat)
      if: github.ref == 'refs/heads/uat'
      run: |
        scp -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no -P ${{ secrets.AWS_UAT_DEPLOY_PORT }} deploy-package.tar.gz ${{ secrets.AWS_UAT_DEPLOY_USER }}@${{ secrets.AWS_UAT_DEPLOY_HOST }}:${{ secrets.AWS_UAT_DEPLOY_TARGET }}/api

    - name: Transfer Deployment Package to EC2 Instance (dev)
      if: github.ref == 'refs/heads/development'
      run: |
        scp -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no -P ${{ secrets.AWS_DEV_DEPLOY_PORT }} deploy-package.tar.gz ${{ secrets.AWS_DEV_DEPLOY_USER }}@${{ secrets.AWS_DEV_DEPLOY_HOST }}:${{ secrets.AWS_DEV_DEPLOY_TARGET }}/api

    - name: Extract Deployment Package on EC2 (main)
      if: github.ref == 'refs/heads/main'
      run: |
        ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no -p ${{ secrets.AWS_DEPLOY_PORT }} ${{ secrets.AWS_DEPLOY_USER }}@${{ secrets.AWS_DEPLOY_HOST }} 'tar -xzf ${{ secrets.AWS_DEPLOY_TARGET }}/api/deploy-package.tar.gz -C ${{ secrets.AWS_DEPLOY_TARGET }}/api -o'

    - name: Extract Deployment Package on EC2 (uat)
      if: github.ref == 'refs/heads/uat'
      run: |
        ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no -p ${{ secrets.AWS_UAT_DEPLOY_PORT }} ${{ secrets.AWS_UAT_DEPLOY_USER }}@${{ secrets.AWS_UAT_DEPLOY_HOST }} 'tar -xzf ${{ secrets.AWS_UAT_DEPLOY_TARGET }}/api/deploy-package.tar.gz -C ${{ secrets.AWS_UAT_DEPLOY_TARGET }}/api -o'

    - name: Extract Deployment Package on EC2 (dev)
      if: github.ref == 'refs/heads/development'
      run: |
        ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no -p ${{ secrets.AWS_DEV_DEPLOY_PORT }} ${{ secrets.AWS_DEV_DEPLOY_USER }}@${{ secrets.AWS_DEV_DEPLOY_HOST }} 'tar -xzf ${{ secrets.AWS_DEV_DEPLOY_TARGET }}/api/deploy-package.tar.gz -C ${{ secrets.AWS_DEV_DEPLOY_TARGET }}/api -o'

    - name: Restart PM2 on EC2 Instance (main)
      if: github.ref == 'refs/heads/main'
      run: |
        ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no -p ${{ secrets.AWS_DEPLOY_PORT }} ${{ secrets.AWS_DEPLOY_USER }}@${{ secrets.AWS_DEPLOY_HOST }} 'pm2 restart SpaceShare.Api'

    - name: Restart PM2 on EC2 Instance (uat)
      if: github.ref == 'refs/heads/uat'
      run: |
        ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no -p ${{ secrets.AWS_UAT_DEPLOY_PORT }} ${{ secrets.AWS_UAT_DEPLOY_USER }}@${{ secrets.AWS_UAT_DEPLOY_HOST }} 'sudo npm i -g pm2 && pm2 restart SpaceShare.Api'

    - name: Restart PM2 on EC2 Instance (dev)
      if: github.ref == 'refs/heads/development'
      run: |
        ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no -p ${{ secrets.AWS_DEV_DEPLOY_PORT }} ${{ secrets.AWS_DEV_DEPLOY_USER }}@${{ secrets.AWS_DEV_DEPLOY_HOST }} 'pm2 restart SpaceShare.Api'
